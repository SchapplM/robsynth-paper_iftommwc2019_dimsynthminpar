% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% kuka6dof
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[L1,L2,L3,L4,L5,L6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox (ehem. IRT-Maple-Toolbox)
% Datum: 2018-08-07 17:57
% Revision: 4fc915f170f947983f72d2b29299dd86a0cf3511
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für mechatronische Systeme, Universität Hannover

function tau_reg = kuka6dof_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'kuka6dof_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'kuka6dof_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'kuka6dof_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'kuka6dof_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'kuka6dof_invdynJ_fixb_reg2_slag_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2018-08-07 17:53:35
% EndTime: 2018-08-07 17:54:22
% DurationCPUTime: 24.90s
% Computational Cost: add. (22312->872), mult. (48613->1173), div. (0->0), fcn. (37997->14), ass. (0->420)
t295 = sin(qJ(3));
t296 = sin(qJ(2));
t472 = qJD(1) * t296;
t301 = cos(qJ(3));
t302 = cos(qJ(2));
t479 = t301 * t302;
t218 = -qJD(1) * t479 + t295 * t472;
t227 = t295 * t302 + t296 * t301;
t219 = t227 * qJD(1);
t293 = sin(qJ(5));
t299 = cos(qJ(5));
t300 = cos(qJ(4));
t481 = t299 * t300;
t147 = t293 * t218 - t219 * t481;
t294 = sin(qJ(4));
t466 = qJD(5) * t293;
t427 = t294 * t466;
t614 = t147 + t427;
t613 = -t219 - qJD(4);
t452 = qJD(2) + qJD(3);
t350 = t300 * t218 - t294 * t452;
t131 = t293 * t613 - t299 * t350;
t272 = t300 * t452;
t412 = t218 * t294 + t272;
t594 = qJD(5) + t412;
t612 = t131 * t594;
t611 = t350 * t613;
t610 = t412 * t613;
t156 = -pkin(4) * t218 + pkin(5) * t219;
t554 = pkin(3) * qJD(2);
t444 = t295 * t554;
t137 = t156 * t294 - t300 * t444;
t468 = qJD(4) * t294;
t429 = t299 * t468;
t471 = qJD(2) * t301;
t443 = pkin(3) * t471;
t463 = qJD(5) * t300;
t464 = qJD(5) * t299;
t475 = t299 * t137 - t293 * t443 - pkin(4) * t464 - (-t293 * t463 - t429) * pkin(5);
t609 = t614 * pkin(6);
t485 = t295 * t296;
t226 = -t479 + t485;
t351 = t226 * qJDD(1);
t450 = qJDD(2) + qJDD(3);
t400 = t300 * t450;
t585 = t219 * t452;
t318 = t294 * t585;
t597 = qJD(4) * t350 + t318;
t311 = t294 * t351 + t400 + t597;
t309 = qJDD(5) + t311;
t467 = qJD(4) * t300;
t608 = t294 * t309 + t594 * t467;
t491 = t293 * t300;
t146 = -t218 * t299 - t219 * t491;
t426 = t294 * t464;
t388 = t146 - t426;
t593 = -t293 * t467 + t388;
t297 = sin(qJ(1));
t303 = cos(qJ(1));
t244 = g(1) * t303 + g(2) * t297;
t560 = t302 * pkin(3);
t282 = pkin(2) + t560;
t243 = t282 * qJD(1);
t141 = pkin(4) * t219 + pkin(5) * t218 - t243;
t233 = pkin(5) * t452 + t443;
t582 = t300 * t141 - t233 * t294;
t115 = t141 * t294 + t233 * t300;
t232 = -pkin(4) * t452 + t444;
t96 = t299 * t115 - t293 * t232;
t607 = -t582 * t131 + t594 * t96;
t129 = -t293 * t350 - t299 * t613;
t127 = qJD(6) + t129;
t292 = sin(qJ(6));
t298 = cos(qJ(6));
t76 = -pkin(6) * t131 + t582;
t77 = pkin(6) * t594 + t96;
t382 = t292 * t77 - t298 * t76;
t269 = qJD(3) * t444;
t454 = t301 * qJDD(2);
t200 = pkin(3) * t454 + pkin(5) * t450 - t269;
t386 = t452 * t485;
t453 = t302 * qJDD(1);
t458 = qJD(1) * qJD(2);
t423 = t302 * t458;
t455 = t296 * qJDD(1);
t457 = qJD(1) * qJD(3);
t592 = -t302 * t457 - t423 - t455;
t128 = qJD(1) * t386 - t295 * t453 + t301 * t592;
t424 = t296 * t458;
t270 = pkin(3) * t424;
t579 = pkin(5) * t226 - t282;
t75 = -t128 * pkin(4) + pkin(5) * t585 + qJDD(1) * t579 + t270;
t74 = t300 * t75;
t46 = -qJD(4) * t115 - t200 * t294 + t74;
t126 = -qJDD(4) + t128;
t314 = -t585 - t351;
t401 = qJD(4) * t452;
t86 = -t218 * t468 - t294 * t450 + (-t314 - t401) * t300;
t418 = -t293 * t126 + t299 * t86;
t49 = qJD(5) * t129 + t418;
t20 = pkin(6) * t49 + t46;
t456 = qJDD(2) * t295;
t470 = qJD(3) * t301;
t201 = -t450 * pkin(4) + (qJD(2) * t470 + t456) * pkin(3);
t596 = qJD(4) * t582;
t45 = t200 * t300 + t294 * t75 + t596;
t416 = -t293 * t201 + t299 * t45;
t21 = pkin(6) * t309 - t115 * t466 - t232 * t464 + t416;
t7 = -t382 * qJD(6) + t292 * t20 + t298 * t21;
t606 = t382 * t127 + t7;
t553 = pkin(3) * qJD(3);
t448 = t295 * t553;
t404 = t294 * t448;
t572 = pkin(3) * t301;
t281 = pkin(5) + t572;
t566 = pkin(6) * t299;
t421 = -t281 - t566;
t148 = pkin(3) * t472 + t156;
t515 = t148 * t300;
t605 = t421 * t467 + t404 - t515 + t609;
t445 = pkin(6) * t468;
t503 = t219 * t294;
t604 = -pkin(6) * t503 - t445 - t475;
t136 = t300 * t156 + t294 * t444;
t436 = -pkin(5) - t566;
t603 = t436 * t467 - t136 + t609;
t291 = qJ(2) + qJ(3);
t284 = sin(t291);
t478 = t303 * t300;
t484 = t297 * t294;
t210 = t284 * t478 - t484;
t285 = cos(t291);
t494 = t285 * t303;
t165 = -t210 * t293 + t299 * t494;
t29 = (qJD(5) * t115 + t201) * t299 - t232 * t466 + t293 * t45;
t367 = t284 * t299 + t285 * t491;
t483 = t297 * t300;
t486 = t294 * t303;
t208 = t284 * t483 + t486;
t495 = t285 * t299;
t413 = t208 * t293 - t297 * t495;
t602 = -g(1) * t165 + g(2) * t413 - g(3) * t367 + t29;
t280 = pkin(3) * t295 - pkin(4);
t447 = pkin(3) * t470;
t349 = t281 * t463 + t447;
t403 = t300 * t448;
t121 = -t349 * t293 + (-qJD(5) * t280 - t281 * t468 - t403) * t299;
t601 = (pkin(6) * t219 + t148 * t299) * t294 - t121 + t445;
t482 = t298 * t299;
t222 = t292 * t300 + t294 * t482;
t488 = t294 * t298;
t477 = -t222 * qJD(6) + t613 * t488 + (-t481 * qJD(4) + t614) * t292;
t428 = t299 * t467;
t461 = qJD(6) * t298;
t465 = qJD(5) * t298;
t493 = t292 * t294;
t476 = t219 * t493 - t300 * t461 + (t293 * t465 + (qJD(6) * t299 + qJD(4)) * t292) * t294 + (t147 - t428) * t298;
t496 = t285 * t297;
t600 = g(1) * t494 + g(2) * t496;
t599 = t428 - t614;
t598 = t468 + t503;
t162 = t208 * t299 + t293 * t496;
t207 = t284 * t484 - t478;
t591 = t162 * t292 + t207 * t298;
t590 = t162 * t298 - t207 * t292;
t39 = t292 * t76 + t298 * t77;
t8 = -qJD(6) * t39 + t298 * t20 - t292 * t21;
t587 = -t39 * t127 - t8;
t502 = t226 * t294;
t152 = -t226 * t491 + t227 * t299;
t168 = t386 + (-t470 - t471) * t302;
t169 = t452 * t227;
t70 = qJD(5) * t152 - t168 * t293 + t169 * t481 - t226 * t429;
t586 = qJD(6) * t502 - t70;
t393 = g(1) * t297 - g(2) * t303;
t584 = t393 * t285;
t583 = -pkin(5) * t467 - t136;
t229 = t293 * pkin(4) + pkin(5) * t481;
t433 = t293 * t468;
t474 = -pkin(5) * t433 + qJD(5) * t229 - t137 * t293 - t299 * t443;
t562 = g(3) * t300;
t580 = -g(1) * t210 - g(2) * t208 + t285 * t562;
t343 = -t295 * t455 + t301 * t453;
t321 = -t294 * t343 + qJDD(5) + t400;
t578 = -t218 * t467 + t294 * t401 - t318 - t321;
t364 = t594 * t294;
t577 = -t300 * t129 + t293 * t364;
t576 = -t281 * t467 + t404;
t93 = t298 * t131 + t292 * t594;
t530 = qJD(6) * t93;
t23 = -t292 * t49 - t298 * t309 + t530;
t435 = t226 * t467;
t513 = t169 * t294;
t362 = t435 + t513;
t359 = t594 * qJD(5);
t344 = t294 * t359;
t574 = -t608 * t293 - t299 * t344;
t273 = t285 * pkin(5);
t225 = -pkin(4) * t284 + t273;
t398 = -pkin(4) * t285 - pkin(5) * t284;
t573 = -g(3) * (t225 + t560) + t244 * (pkin(3) * t296 - t398);
t101 = -t218 * t452 + t128;
t50 = t299 * (-qJD(5) * t350 - t126) + t613 * t466 - t293 * t86;
t304 = qJD(2) ^ 2;
t570 = pkin(5) * t294;
t569 = pkin(6) * t127;
t568 = pkin(6) * t129;
t274 = g(3) * t284;
t275 = g(3) * t285;
t561 = g(3) * t302;
t366 = t298 * t594;
t91 = t131 * t292 - t366;
t559 = t93 * t91;
t189 = -t280 * t293 + t281 * t481;
t288 = t300 * pkin(6);
t177 = t189 + t288;
t213 = t421 * t294;
t133 = -t177 * t292 + t213 * t298;
t558 = qJD(6) * t133 + t605 * t292 - t601 * t298;
t134 = t177 * t298 + t213 * t292;
t557 = -qJD(6) * t134 + t601 * t292 + t605 * t298;
t217 = t288 + t229;
t230 = t436 * t294;
t154 = -t217 * t292 + t230 * t298;
t556 = qJD(6) * t154 + t603 * t292 + t604 * t298;
t155 = t217 * t298 + t230 * t292;
t555 = -qJD(6) * t155 - t604 * t292 + t603 * t298;
t552 = t127 * t91;
t462 = qJD(6) * t292;
t22 = -qJD(6) * t366 + t131 * t462 - t292 * t309 + t298 * t49;
t551 = t22 * t292;
t550 = t22 * t298;
t549 = t23 * t292;
t548 = t23 * t298;
t188 = t280 * t299 + t281 * t491;
t547 = t29 * t188;
t48 = qJDD(6) + t50;
t546 = t292 * t48;
t545 = t292 * t91;
t544 = t292 * t93;
t543 = t293 * t49;
t95 = t115 * t293 + t232 * t299;
t542 = t293 * t95;
t541 = t294 * t46;
t540 = t294 * t86;
t539 = t298 * t48;
t538 = t298 * t91;
t537 = t298 * t93;
t536 = t299 * t50;
t535 = t300 * t311;
t43 = t45 * t300;
t532 = t93 * t127;
t531 = qJD(5) * t95;
t529 = qJDD(1) * pkin(2);
t449 = t296 * t554;
t104 = -pkin(4) * t168 + pkin(5) * t169 + t449;
t528 = t104 * t294;
t527 = t104 * t300;
t526 = t582 * t129;
t524 = t582 * t300;
t523 = t115 * t294;
t522 = t115 * t300;
t521 = t126 * t294;
t520 = t129 * t293;
t519 = t129 * t299;
t518 = t131 * t129;
t517 = t131 * t293;
t516 = t131 * t299;
t157 = pkin(4) * t227 + t579;
t514 = t157 * t300;
t512 = t412 * t294;
t511 = t412 * t299;
t510 = t350 * t412;
t509 = t350 * t300;
t506 = t613 * t218;
t505 = t219 * t218;
t504 = t219 * t232;
t501 = t226 * t300;
t499 = t281 * t294;
t498 = t284 * t297;
t497 = t284 * t303;
t492 = t293 * t294;
t490 = t294 * t129;
t489 = t294 * t131;
t487 = t294 * t299;
t289 = t296 ^ 2;
t290 = t302 ^ 2;
t473 = t289 - t290;
t469 = qJD(4) * t613;
t451 = -0.2e1 * qJDD(2) - qJDD(3);
t442 = t104 * t492;
t441 = t285 * t493;
t440 = t285 * t488;
t439 = t285 * t486;
t305 = qJD(1) ^ 2;
t438 = t296 * t305 * t302;
t437 = -g(1) * t497 - g(2) * t498 + t275;
t431 = t129 * t468;
t430 = t131 * t468;
t419 = -qJD(5) * t96 + t29;
t414 = -0.2e1 * pkin(2) * t458;
t411 = t127 * t298;
t410 = t300 * t613;
t409 = t594 * t293;
t408 = qJD(4) * t281 + t148;
t405 = t295 * t452;
t399 = t296 * t423;
t397 = g(1) * t413 + g(2) * t165;
t209 = t284 * t486 + t483;
t396 = -g(1) * t209 - g(2) * t207;
t395 = g(1) * t207 - g(2) * t209;
t122 = -t280 * t466 - t281 * t433 - t293 * t403 + t299 * t349;
t392 = -t148 * t492 + t122;
t391 = -t115 * t218 + t201 * t294 + t232 * t467;
t111 = t292 * t511 - t298 * t350;
t390 = t292 * t464 + t111;
t112 = t292 * t350 + t412 * t482;
t389 = -t298 * t464 - t112;
t385 = pkin(6) * t226 + t157 * t299;
t383 = t292 * t39 - t298 * t382;
t381 = -t293 * t96 + t299 * t95;
t380 = t299 * t96 + t542;
t153 = -t226 * t481 - t227 * t293;
t100 = -pkin(6) * t153 + t514;
t120 = t385 * t294;
t64 = t100 * t298 - t120 * t292;
t65 = t100 * t292 + t120 * t298;
t378 = -t523 - t524;
t377 = t126 * t281 + t504;
t376 = t517 - t519;
t173 = -pkin(4) * t497 + pkin(5) * t494 + t303 * t282;
t374 = -t115 * t503 - t219 * t524 + t43 - t437;
t372 = -t243 * t218 + t274 + t600;
t203 = t398 * t297;
t204 = t398 * t303;
t370 = -t467 * t582 - t541;
t369 = -t127 * t461 - t546;
t368 = -t127 * t462 + t539;
t199 = -t284 * t293 + t285 * t481;
t365 = t299 * t594;
t363 = -pkin(6) * t48 + t127 * t95;
t361 = -t169 * t300 + t226 * t468;
t172 = pkin(4) * t498 + (-t282 - t273) * t297;
t360 = -g(1) * t172 - g(2) * t173 + t104 * t524 + t46 * t514;
t228 = -t299 * pkin(4) + pkin(5) * t491;
t358 = t29 * t228 + t474 * t95;
t357 = -t243 * t219 + t269 + t437;
t356 = pkin(2) * t305 + t244;
t166 = -t210 * t299 - t293 * t494;
t353 = -g(1) * t166 + g(2) * t162 - g(3) * t199;
t180 = t367 * t297;
t182 = t367 * t303;
t196 = t284 * t491 - t495;
t352 = g(1) * t182 + g(2) * t180 + g(3) * t196;
t348 = t393 + 0.2e1 * t529;
t346 = t294 * t365;
t342 = t275 * t294 + t396;
t340 = t404 * t582 + t573;
t336 = t342 + t46;
t335 = qJD(4) * t226 * t232 + t104 * t613 + t126 * t157;
t334 = t157 * t469 - t169 * t232 - t201 * t226;
t333 = -t244 * t285 - t274;
t332 = qJD(6) * t153 - t362;
t331 = t582 * t218 + t232 * t468 + t284 * t562 + (-t201 + t600) * t300;
t330 = -g(1) * t204 - g(2) * t203 - g(3) * t225 - t136 * t582;
t329 = qJD(4) * t378 - t541;
t181 = t199 * t297;
t183 = t199 * t303;
t197 = -t284 * t481 - t285 * t293;
t328 = -g(1) * (t183 * t292 + t298 * t439) - g(2) * (t181 * t292 + t297 * t440) - g(3) * (-t197 * t292 + t284 * t488) + t29 * t222 - t476 * t95;
t327 = qJD(6) * t569 + t602;
t326 = qJD(5) * t569 + t342;
t325 = t329 + t43;
t324 = t412 * t594 + t359;
t323 = t146 * t96 + t381 * t467 - t614 * t95;
t221 = t292 * t487 - t298 * t300;
t322 = -t7 * t221 - t8 * t222 - t476 * t382 + t477 * t39 + t352;
t320 = -g(1) * (-t183 * t298 + t292 * t439) - g(2) * (-t181 * t298 + t297 * t441) - g(3) * (t197 * t298 + t284 * t493) + t29 * t221 + t8 * t492 - t477 * t95 + t593 * t382;
t317 = g(1) * t183 + g(2) * t181 - g(3) * t197 - t29 * t300 + t46 * t492 - t582 * t593 + t598 * t95;
t316 = t292 * t7 + t298 * t8 + (t292 * t382 + t298 * t39) * qJD(6) + t342;
t28 = t416 - t531;
t315 = -t28 * t300 + t46 * t487 + t582 * t599 + t598 * t96 - t352;
t212 = -qJDD(1) * t282 + t270;
t135 = t218 ^ 2 - t219 ^ 2;
t124 = t166 * t298 + t209 * t292;
t123 = -t166 * t292 + t209 * t298;
t119 = t153 * t298 + t226 * t493;
t118 = t153 * t292 - t226 * t488;
t102 = t314 + t585;
t85 = -pkin(6) * t511 - t115;
t83 = pkin(6) * t350 + t299 * t582;
t71 = -t169 * t491 + t226 * t433 - t227 * t466 + (-t226 * t463 - t168) * t299;
t67 = t292 * t568 - t298 * t95;
t66 = t292 * t95 + t298 * t568;
t63 = -t218 * t350 + t410 * t613 - t521;
t62 = -t294 * t613 ^ 2 - t126 * t300 + t218 * t412;
t57 = t512 * t613 + t535;
t56 = t350 * t410 - t540;
t55 = t613 * t364 + (t321 + t597) * t300;
t52 = t292 * t85 + t298 * t83;
t51 = -t292 * t83 + t298 * t85;
t44 = t385 * t467 + (pkin(6) * t169 + t104 * t299 - t157 * t466) * t294;
t35 = pkin(6) * t70 - t157 * t468 + t527;
t34 = t292 * t586 + t298 * t332;
t33 = t292 * t332 - t298 * t586;
t24 = (-t86 - t610) * t300 + (t311 - t611) * t294;
t19 = -t129 * t593 + t492 * t50;
t18 = t131 * t599 - t49 * t487;
t16 = -t127 * t593 + t48 * t492;
t15 = -t147 * t594 - t219 * t489 - t293 * t344 + t608 * t299 - t300 * t49 - t430;
t14 = t146 * t594 + t219 * t490 - t300 * t50 + t431 + t574;
t13 = -qJD(6) * t65 - t292 * t44 + t298 * t35;
t12 = qJD(6) * t64 + t292 * t35 + t298 * t44;
t11 = t221 * t23 - t477 * t91;
t10 = -t22 * t222 - t476 * t93;
t9 = t129 * t147 + t131 * t146 + (-t517 - t519) * t467 + (t543 - t536 + (-t516 + t520) * qJD(5)) * t294;
t3 = t127 * t477 - t221 * t48 - t23 * t492 + t593 * t91;
t2 = -t127 * t476 - t22 * t492 + t222 * t48 - t593 * t93;
t1 = t22 * t221 - t222 * t23 + t476 * t91 + t477 * t93;
t4 = [0, 0, 0, 0, 0, qJDD(1), t393, t244, 0, 0, qJDD(1) * t289 + 0.2e1 * t399, 0.2e1 * t296 * t453 - 0.2e1 * t458 * t473, qJDD(2) * t296 + t302 * t304, qJDD(1) * t290 - 0.2e1 * t399, qJDD(2) * t302 - t296 * t304, 0, t296 * t414 + t302 * t348, -t296 * t348 + t302 * t414, -t244 (t393 + t529) * pkin(2), t218 * t169 - t226 * t314, -t226 * t128 - t218 * t168 + t169 * t219 - t227 * t314, -t169 * t452 - t226 * t450, -t128 * t227 - t168 * t219, t168 * t452 - t227 * t450, 0, t128 * t282 + t168 * t243 + t212 * t227 + t219 * t449 - t284 * t393, t243 * t169 - t212 * t226 - t218 * t449 - t282 * t314 - t584 ((-t226 * t295 - t227 * t301) * qJDD(2) + (t168 * t301 - t169 * t295 + (-t226 * t301 + t227 * t295) * qJD(3)) * qJD(2)) * pkin(3) - t244, -t243 * t449 + (-t212 + t393) * t282, -t350 * t361 + t501 * t86 (-t294 * t350 - t300 * t412) * t169 + (-t540 - t535 + (-t509 + t512) * qJD(4)) * t226, t126 * t501 + t168 * t350 - t227 * t86 - t361 * t613, t311 * t502 + t362 * t412, -t126 * t502 - t168 * t412 + t227 * t311 - t362 * t613, -t126 * t227 + t168 * t613, -g(1) * t208 + g(2) * t210 - t168 * t582 + t227 * t46 + t294 * t334 - t300 * t335, t115 * t168 - t227 * t45 + t294 * t335 + t300 * t334 + t395, t584 + (t104 * t350 + t582 * t169 + t157 * t86 + t226 * t46 + (t115 * t226 + t157 * t412) * qJD(4)) * t300 + (t104 * t412 + t115 * t169 + t157 * t311 + t226 * t45 + (-t157 * t350 - t226 * t582) * qJD(4)) * t294, t104 * t523 + (t294 * t45 + (-t294 * t582 + t522) * qJD(4)) * t157 + t360, -t131 * t70 - t153 * t49, t129 * t70 - t131 * t71 + t152 * t49 - t153 * t50, t131 * t435 + t153 * t309 + t169 * t489 - t49 * t502 - t594 * t70, t129 * t71 + t152 * t50, -t129 * t435 - t152 * t309 - t169 * t490 - t50 * t502 - t594 * t71, t169 * t364 + ((qJD(5) + t272) * t467 + (qJDD(5) + (-t401 - t343) * t294 + (0.2e1 * qJD(4) * t218 + t450) * t300 + qJD(1) * t513) * t294) * t226, -g(1) * t162 - g(2) * t166 + t582 * t71 + t46 * t152 - t29 * t502 + t50 * t514 - t362 * t95 - t577 * t104 + (-t431 + t574) * t157, -t104 * t346 - t582 * t70 + t131 * t527 + t46 * t153 - t28 * t502 - t49 * t514 + t397 - t362 * t96 + (-t309 * t487 - t365 * t467 + t427 * t594 - t430) * t157, -t152 * t28 + t153 * t29 - t70 * t95 - t71 * t96 + t376 * t528 + (t376 * t467 + (-t543 - t536 + (t516 + t520) * qJD(5)) * t294) * t157 + t395, t380 * t528 + (t380 * t467 + (qJD(5) * t381 + t28 * t299 + t29 * t293 - t596) * t294) * t157 + t360, -t119 * t22 - t33 * t93, t118 * t22 - t119 * t23 + t33 * t91 - t34 * t93, t119 * t48 - t127 * t33 - t152 * t22 + t71 * t93, t118 * t23 + t34 * t91, -t118 * t48 - t127 * t34 - t152 * t23 - t71 * t91, t127 * t71 + t152 * t48, t13 * t127 + t64 * t48 + t8 * t152 - t382 * t71 + t91 * t442 + t29 * t118 + t95 * t34 - g(1) * t590 - g(2) * t124 + (t91 * t426 + (t23 * t294 + t467 * t91) * t293) * t157, -t12 * t127 - t65 * t48 - t7 * t152 - t39 * t71 + t93 * t442 + t29 * t119 - t95 * t33 + g(1) * t591 - g(2) * t123 + (t93 * t426 + (-t22 * t294 + t467 * t93) * t293) * t157, -t118 * t7 - t119 * t8 - t12 * t91 - t13 * t93 + t22 * t64 - t23 * t65 - t33 * t382 - t34 * t39 - t397, t7 * t65 + t39 * t12 + t8 * t64 - t382 * t13 + t95 * t442 - g(1) * (pkin(6) * t413 + t172) - g(2) * (pkin(6) * t165 + t173) + (t95 * t426 + (t29 * t294 + t467 * t95) * t293) * t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438, t473 * t305, t455, t438, t453, qJDD(2), t296 * t356 - t561, g(3) * t296 + t302 * t356, 0, 0, -t505, t135, t102, t505, t101, t450 (-t219 * t472 + t451 * t295 + (-0.2e1 * qJD(2) - qJD(3)) * t470) * pkin(3) + t372 (qJD(3) * t405 + t218 * t472 + t301 * t451) * pkin(3) + t357, t219 * t444 + ((qJD(3) * t219 + t295 * t592) * t295 + (-t295 * (t296 * t457 + t424 - t453) + t101) * t301) * pkin(3) (-t561 + (qJD(1) * t243 + t244) * t296 + (t295 ^ 2 + t301 ^ 2) * qJDD(2) * pkin(3)) * pkin(3), t56, t24, t63, t57, t62, -t506, -t412 * t447 - t280 * t311 + t377 * t294 - (-t300 * t408 + t404) * t613 + t331, -t350 * t447 - t280 * t86 + (-t448 * t613 + t377) * t300 + (-t408 * t613 + t333) * t294 + t391 (-t412 * t448 - t148 * t350 + t281 * t311 + (-t281 * t350 - t582) * qJD(4)) * t300 + (t350 * t448 - t148 * t412 - t281 * t86 - t46 + (-t281 * t412 - t115) * qJD(4)) * t294 + t374, t201 * t280 + t378 * t148 + (t232 * t301 - t295 * t522) * t553 + t325 * t281 + t340, t18, t9, t15, t19, t14, t55, -t122 * t594 + t129 * t576 + t148 * t577 - t188 * t309 - t499 * t50 + t317, -t121 * t594 + t148 * t346 - t189 * t309 + t49 * t499 + t315 + (-t515 + t576) * t131, -t121 * t129 + t122 * t131 - t188 * t49 - t189 * t50 + ((-t148 * t131 - t28) * t293 + (t129 * t148 + t419) * t299 + t333) * t294 + t323, t121 * t96 + t95 * t122 + t547 + t189 * t28 + t370 * t281 + (-t294 * t380 - t524) * t148 + t340, t10, t1, t2, t11, t3, t16, t127 * t557 + t133 * t48 + t188 * t23 + t392 * t91 + t320, t122 * t93 - t134 * t48 - t188 * t22 + t388 * t39 - t558 * t127 + (-t39 * t467 + (-t148 * t93 - t7) * t294) * t293 + t328, t133 * t22 - t134 * t23 - t557 * t93 - t558 * t91 + t322, pkin(6) * t352 + t8 * t133 + t7 * t134 - t382 * t557 + t39 * t558 + t392 * t95 + t547 + t573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t505, t135, t102, t505, t101, t450, -pkin(3) * t456 + t304 * t572 + t372 (-qJD(2) * t405 - t454) * pkin(3) + t357, 0, 0, t56, t24, t63, t57, t62, -t506, t412 * t443 + t232 * t503 + pkin(4) * t311 + t136 * t613 + (t467 * t613 + t521) * pkin(5) + t331, t350 * t443 + pkin(4) * t86 - t137 * t613 + (pkin(5) * t126 + t504) * t300 + (-pkin(5) * t469 + t333) * t294 + t391, -t136 * t350 - t137 * t412 + (-t540 + t535 + (-t509 - t512) * qJD(4)) * pkin(5) + t329 + t374, -pkin(4) * t201 + pkin(5) * t325 - t115 * t137 - t232 * t443 + t330, t18, t9, t15, t19, t14, t55, t129 * t583 - t228 * t309 - t474 * t594 - t50 * t570 + t317, t131 * t583 - t229 * t309 + t475 * t594 + t49 * t570 + t315, -t228 * t49 - t229 * t50 + t474 * t131 + t475 * t129 + (-t28 * t293 + t419 * t299 + t333) * t294 + t323, pkin(5) * t370 + t229 * t28 - t475 * t96 + t330 + t358, t10, t1, t2, t11, t3, t16, t127 * t555 + t154 * t48 + t228 * t23 + t474 * t91 + t320, -t127 * t556 - t155 * t48 - t22 * t228 + t39 * t593 + t474 * t93 - t492 * t7 + t328, t154 * t22 - t155 * t23 - t555 * t93 - t556 * t91 + t322, t7 * t155 + t8 * t154 - g(1) * (-pkin(6) * t182 + t204) - g(2) * (-pkin(6) * t180 + t203) - g(3) * (-pkin(6) * t196 + t225) + t556 * t39 - t555 * t382 + t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t510, t350 ^ 2 - t412 ^ 2, -t86 + t610, -t510, t311 + t611, -t126, -t233 * t467 - t115 * t613 + t350 * t232 + t74 + (-qJD(4) * t141 - t200 + t275) * t294 + t396, -t232 * t412 - t582 * t613 - t45 + t580, 0, 0, -t516 * t594 + t543 (t129 * t594 + t49) * t299 + (t50 + t612) * t293, -t131 * t350 + t293 * t578 - t299 * t324, -t129 * t409 + t536, t129 * t350 + t293 * t324 + t299 * t578, -t594 * t350, t115 * t129 + t299 * t336 + t350 * t95, t115 * t131 - t293 * t336 + t350 * t96 (-t594 * t95 - t28 + t526) * t299 + (-t29 + t607) * t293 + t580 (t115 - t380) * t582, t293 * t550 + (t293 * t462 + t389) * t93, t111 * t93 + t112 * t91 + (t538 + t544) * t464 + (-t551 + t548 + (t537 - t545) * qJD(6)) * t293, -t22 * t299 + t389 * t127 + (-t594 * t93 - t368) * t293, -t293 * t549 + (-t293 * t461 - t390) * t91, -t23 * t299 + t390 * t127 + (t594 * t91 - t369) * t293, -t127 * t409 + t299 * t48, -t95 * t111 - t51 * t127 + t580 * t292 + (-t292 * t531 + t298 * t326 + t8) * t299 + (pkin(6) * t368 - t29 * t292 + t382 * t594 - t461 * t95 - t582 * t91) * t293, -t95 * t112 + t52 * t127 + t580 * t298 + (-t292 * t326 - t465 * t95 - t7) * t299 + (pkin(6) * t369 - t29 * t298 + t39 * t594 + t462 * t95 - t582 * t93) * t293, t111 * t39 - t112 * t382 + t51 * t93 + t52 * t91 + ((-t537 - t545) * pkin(6) + t383) * t464 + ((t550 - t549 + (-t538 + t544) * qJD(6)) * pkin(6) + t316) * t293, -t582 * t542 + t382 * t51 - t39 * t52 + (t293 * t316 + t383 * t464) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t518, -t129 ^ 2 + t131 ^ 2, t129 * t412 - t418, -t518, -t50 + t612, t309, -t602 + t607, -t412 * t95 - t353 - t416 + t526, 0, 0, t411 * t93 - t551 (-t22 - t552) * t298 + (-t23 - t532) * t292, t127 * t411 - t131 * t93 + t546, t127 * t545 - t548, -t127 ^ 2 * t292 + t131 * t91 + t539, -t127 * t131, -t127 * t66 + t131 * t382 + t292 * t363 - t298 * t327 - t91 * t96, t127 * t67 + t131 * t39 + t292 * t327 + t298 * t363 - t93 * t96, t66 * t93 + t67 * t91 + ((-t23 + t530) * pkin(6) + t606) * t298 + ((qJD(6) * t91 - t22) * pkin(6) + t587) * t292 + t353, t382 * t66 - t39 * t67 - t95 * t96 + (-qJD(6) * t383 - t292 * t8 + t298 * t7 + t353) * pkin(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t559, -t91 ^ 2 + t93 ^ 2, -t22 + t552, -t559, t532 - t23, t48, -t95 * t93 - g(1) * t123 - g(2) * t591 - g(3) * (-t199 * t292 - t440) - t587, t95 * t91 + g(1) * t124 - g(2) * t590 - g(3) * (-t199 * t298 + t441) - t606, 0, 0;];
tau_reg  = t4;
