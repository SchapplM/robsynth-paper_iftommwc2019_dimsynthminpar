% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% lwr4p
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [7x1]
%   Generalized joint coordinates (joint angles)
% qJD [7x1]
%   Generalized joint velocities
% qJDD [7x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [3x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[d1,d3,d5]';
% 
% Output:
% tau_reg [7x45]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox (ehem. IRT-Maple-Toolbox)
% Datum: 2018-08-07 11:08
% Revision: 4fc915f170f947983f72d2b29299dd86a0cf3511
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für mechatronische Systeme, Universität Hannover

function tau_reg = lwr4p_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(7,1),zeros(7,1),zeros(7,1),zeros(3,1),zeros(3,1)}
assert(isreal(qJ) && all(size(qJ) == [7 1]), ...
  'lwr4p_invdynJ_fixb_regmin_slag_vp: qJ has to be [7x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [7 1]), ...
  'lwr4p_invdynJ_fixb_regmin_slag_vp: qJD has to be [7x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [7 1]), ...
  'lwr4p_invdynJ_fixb_regmin_slag_vp: qJDD has to be [7x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'lwr4p_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [3 1]), ...
  'lwr4p_invdynJ_fixb_regmin_slag_vp: pkin has to be [3x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2018-08-07 10:28:49
% EndTime: 2018-08-07 10:30:28
% DurationCPUTime: 43.26s
% Computational Cost: add. (22476->1038), mult. (50524->1525), div. (0->0), fcn. (42421->14), ass. (0->440)
t273 = cos(qJ(4));
t274 = cos(qJ(3));
t275 = cos(qJ(2));
t485 = t274 * t275;
t266 = sin(qJ(4));
t268 = sin(qJ(2));
t509 = t266 * t268;
t218 = t273 * t485 + t509;
t203 = t218 * qJD(1);
t456 = t273 * qJD(3);
t415 = t274 * t456;
t267 = sin(qJ(3));
t471 = qJD(4) * t266;
t417 = t267 * t471;
t324 = t415 - t417;
t605 = -t203 - t324;
t269 = sin(qJ(1));
t276 = cos(qJ(1));
t501 = t267 * t276;
t213 = t269 * t485 + t501;
t174 = t213 * t273 + t269 * t509;
t484 = t276 * t274;
t497 = t269 * t267;
t212 = t275 * t497 - t484;
t265 = sin(qJ(5));
t272 = cos(qJ(5));
t108 = t174 * t265 + t212 * t272;
t263 = sin(qJ(7));
t270 = cos(qJ(7));
t109 = t174 * t272 - t212 * t265;
t500 = t268 * t273;
t173 = t213 * t266 - t269 * t500;
t264 = sin(qJ(6));
t271 = cos(qJ(6));
t68 = t109 * t271 + t173 * t264;
t604 = -t108 * t263 + t270 * t68;
t477 = qJD(1) * t275;
t439 = t267 * t477;
t470 = qJD(4) * t272;
t492 = t272 * t274;
t482 = (-qJD(5) - t456) * t492 + (t266 * t470 + (qJD(5) * t273 + qJD(3)) * t265) * t267 - t203 * t272 + t265 * t439;
t437 = t274 * t477;
t478 = qJD(1) * t268;
t202 = t266 * t437 - t273 * t478;
t469 = qJD(4) * t273;
t472 = qJD(3) * t274;
t323 = -t266 * t472 - t267 * t469;
t571 = t202 - t323;
t258 = t267 * qJD(2);
t438 = t274 * t478;
t337 = -t438 + t258;
t396 = qJD(3) + t477;
t357 = t266 * t396;
t183 = -t273 * t337 - t357;
t259 = t274 * qJD(2);
t336 = t267 * t478 + t259;
t455 = qJD(4) - t336;
t602 = t183 * t455;
t462 = qJD(6) * t266;
t601 = -t267 * t462 + t482;
t600 = t605 * pkin(3) + (-t437 - t472) * pkin(2);
t440 = -pkin(2) * t273 - pkin(3);
t388 = t267 * t440;
t433 = t267 * t456;
t468 = qJD(4) * t274;
t474 = qJD(3) * t267;
t599 = pkin(3) * t474 + (t266 * t468 + t433) * pkin(2) - t388 * t477;
t493 = t272 * t273;
t339 = t265 * t274 + t267 * t493;
t598 = -qJD(6) * t339 + t571;
t597 = t109 * t264 - t173 * t271;
t473 = qJD(3) * t268;
t411 = qJD(1) * t473;
t362 = qJDD(2) + t411;
t451 = t268 * qJDD(1);
t137 = (t267 * (qJD(2) * (-qJD(3) + t477) + t451) + t362 * t274) * pkin(2);
t418 = t266 * t474;
t428 = t273 * t468;
t596 = t418 - t428;
t257 = t275 * qJDD(1);
t454 = qJD(1) * qJD(2);
t223 = t268 * t454 - qJDD(3) - t257;
t452 = t267 * qJDD(2);
t412 = t275 * t454;
t588 = t412 + t451;
t480 = t588 * t274;
t365 = -t452 + t480;
t303 = -qJD(3) * t336 + t365;
t61 = -qJD(4) * t357 + t266 * t303 + t273 * (-qJD(4) * t337 - t223);
t285 = qJDD(5) + t61;
t548 = -t598 * t264 + t601 * t271;
t225 = t440 * t274;
t562 = pkin(3) * t273;
t226 = (pkin(2) + t562) * t267;
t163 = t225 * t265 - t226 * t272;
t595 = qJD(5) * t163 + t600 * t265 - t599 * t272;
t204 = t272 * t455;
t120 = t183 * t265 - t204;
t115 = qJD(6) + t120;
t122 = t272 * t183 + t265 * t455;
t181 = -t266 * t337 + t273 * t396;
t302 = qJD(5) + t181;
t76 = t271 * t122 + t264 * t302;
t33 = t115 * t270 + t263 * t76;
t160 = t271 * t302;
t74 = t122 * t264 - t160;
t483 = qJD(7) - t74;
t594 = t33 * t483;
t35 = -t263 * t115 + t270 * t76;
t593 = t35 * t483;
t153 = t265 * t337 - t336 * t493;
t465 = qJD(5) * t271;
t494 = t271 * t273;
t517 = t264 * t266;
t531 = -t153 * t271 + t336 * t517 + (qJD(6) - t470) * t494 + (t265 * t465 + (qJD(6) * t272 - qJD(4)) * t264) * t266;
t572 = qJD(3) * t455;
t590 = t273 * t572;
t488 = t273 * t274;
t504 = t267 * t272;
t481 = t504 * qJD(3) + t339 * qJD(5) + t272 * t439 + (t488 * qJD(3) + t203 - t417) * t265;
t513 = t265 * t273;
t152 = -t272 * t337 - t336 * t513;
t419 = t265 * t469;
t464 = qJD(5) * t272;
t322 = t266 * t464 + t419;
t316 = t152 + t322;
t466 = qJD(5) * t265;
t576 = -t266 * t466 + t272 * t469;
t589 = -t153 - t576;
t220 = t275 * t484 - t497;
t498 = t268 * t276;
t179 = t220 * t266 - t273 * t498;
t487 = t273 * t275;
t499 = t268 * t274;
t210 = t266 * t499 + t487;
t331 = g(1) * t179 + g(2) * t173 + g(3) * t210;
t512 = t266 * t137;
t587 = -t512 - t331;
t453 = qJD(2) * qJD(3);
t410 = t274 * t453;
t563 = pkin(2) * t274;
t138 = -t588 * t563 + (t267 * t411 + t410 + t452) * pkin(2);
t403 = t266 * t223 + t273 * t303;
t60 = -qJD(4) * t181 + t403;
t301 = -pkin(3) * t60 + t138;
t450 = t274 * qJDD(2);
t320 = -t450 + (-t451 + t453) * t267;
t432 = t268 * t472;
t325 = t258 * t275 + t432;
t146 = -qJD(1) * t325 + t320;
t145 = -qJDD(4) - t146;
t222 = t336 * pkin(2);
t491 = t273 * t137;
t41 = -pkin(3) * t145 + t222 * t471 - t491;
t290 = t265 * t301 + t272 * t41;
t489 = t273 * t222;
t154 = pkin(3) * t455 - t489;
t221 = t337 * pkin(2);
t307 = pkin(3) * t183 - t221;
t72 = t265 * t154 + t272 * t307;
t13 = -qJD(5) * t72 + t290;
t429 = t222 * t469;
t575 = t429 + t512;
t73 = t272 * t154 - t265 * t307;
t5 = -t264 * (qJD(6) * t73 + t575) - t271 * (t222 * t462 - t13);
t585 = g(2) * t68 - t5;
t164 = t225 * t272 + t226 * t265;
t546 = qJD(5) * t164 + t599 * t265 + t600 * t272;
t584 = t120 * t302;
t583 = t181 * t396;
t132 = (-qJD(4) + t259) * t487 + (-t433 + (qJD(2) - t468) * t266) * t268;
t505 = t267 * t268;
t580 = -qJD(5) * t505 + t132;
t298 = qJD(4) * t302;
t294 = t273 * t298;
t578 = t266 * t285 + t294;
t260 = t266 ^ 2;
t577 = t137 * t260 + 0.2e1 * t266 * t429;
t503 = t267 * t273;
t209 = t265 * t503 - t492;
t574 = -t266 * t336 + t471;
t573 = qJD(3) * t396;
t281 = t272 * t285;
t297 = qJD(5) * t302;
t516 = t265 * t266;
t570 = t266 * t281 + t272 * t294 - t297 * t516;
t430 = t268 * t469;
t392 = t267 * t430;
t502 = t267 * t275;
t564 = pkin(2) * t266;
t400 = t502 * t564;
t569 = -pkin(2) * t392 - qJD(2) * t400 - t432 * t564;
t371 = qJD(1) * t400;
t568 = t596 * pkin(2) + t371;
t25 = qJD(5) * t204 - t265 * t145 - t183 * t466 + t272 * t60;
t12 = qJD(6) * t76 + t264 * t25 - t271 * t285;
t567 = t222 * t337;
t385 = g(1) * t276 + g(2) * t269;
t312 = -g(3) * t275 + t385 * t268;
t463 = qJD(6) * t264;
t11 = qJD(6) * t160 - t122 * t463 + t271 * t25 + t264 * t285;
t404 = t272 * t145 + t265 * t60;
t26 = qJD(5) * t122 + t404;
t24 = qJDD(6) + t26;
t459 = qJD(7) * t263;
t4 = t11 * t263 - t115 * t459 + (qJD(7) * t76 + t24) * t270;
t408 = t265 * t41 - t272 * t301;
t14 = qJD(5) * t73 + t408;
t342 = t222 * t517 - t271 * t73;
t366 = -t263 * t342 + t270 * t72;
t1 = -t366 * qJD(7) - t263 * t14 + t270 * t5;
t560 = g(2) * t108;
t3 = -qJD(7) * t33 + t270 * t11 - t24 * t263;
t556 = t263 * t3;
t555 = t264 * t3;
t510 = t266 * t267;
t170 = -t264 * t510 - t271 * t339;
t104 = t170 * t263 - t209 * t270;
t554 = -qJD(7) * t104 + t481 * t263 + t548 * t270;
t553 = t209 * t459 + (qJD(7) * t170 - t481) * t270 + t548 * t263;
t460 = qJD(6) * t271;
t420 = t266 * t460;
t552 = t164 * t463 - (t264 * t596 - t274 * t420) * pkin(2) - t264 * t371 + t595 * t271;
t551 = -t164 * t460 + (-t271 * t428 + (t271 * t474 + t274 * t463) * t266) * pkin(2) + t271 * t371 + t595 * t264;
t495 = t271 * t272;
t215 = t264 * t273 - t266 * t495;
t550 = (qJD(7) * t516 + t531) * t270 + (-qJD(7) * t215 + t316) * t263;
t169 = t215 * t270 + t263 * t516;
t549 = qJD(7) * t169 + t531 * t263 - t316 * t270;
t547 = t601 * t264 + t598 * t271;
t545 = t11 * t264;
t544 = t115 * t74;
t543 = t24 * t264;
t542 = t24 * t271;
t541 = t25 * t265;
t10 = -qJDD(7) + t12;
t540 = t263 * t10;
t539 = t263 * t483;
t538 = t266 * t60;
t537 = t270 * t10;
t536 = t270 * t35;
t535 = t270 * t483;
t534 = t76 * t115;
t395 = qJD(7) + t465;
t356 = t270 * t395;
t461 = qJD(6) * t270;
t422 = t264 * t461;
t519 = t263 * t265;
t91 = -t181 * t495 + t183 * t264;
t533 = -t181 * t519 - t270 * t91 + t272 * t356 + (-t422 + (-qJD(7) * t271 - qJD(5)) * t263) * t265;
t496 = t270 * t271;
t214 = t263 * t272 + t265 * t496;
t423 = t265 * t463;
t515 = t265 * t270;
t532 = t214 * qJD(7) + t302 * t515 + (t495 * qJD(5) - t423 - t91) * t263;
t508 = t266 * t271;
t530 = -t589 * t264 - t271 * t471 + t420 * t272 - t273 * t463 + t336 * t508;
t529 = qJD(5) * t76;
t528 = t122 * t272;
t526 = t181 * t272;
t525 = t183 * t273;
t522 = t221 * t266;
t521 = t222 * t266;
t518 = t264 * t265;
t514 = t265 * t271;
t511 = t266 * t145;
t507 = t266 * t272;
t506 = t267 * t223;
t490 = t273 * t145;
t486 = t274 * t223;
t261 = t268 ^ 2;
t479 = -t275 ^ 2 + t261;
t476 = qJD(2) * t268;
t475 = qJD(2) * t275;
t467 = qJD(5) * t264;
t458 = qJD(7) * t270;
t457 = t336 * qJD(2);
t449 = t266 * t563;
t448 = t222 * t516;
t447 = t222 * t507;
t446 = t265 * t505;
t444 = t266 * t505;
t443 = t267 * t508;
t442 = t268 * t504;
t441 = t267 * t498;
t436 = t275 * t259;
t434 = t267 * t473;
t427 = qJD(5) * t222 * t260;
t414 = t336 * t477;
t407 = qJD(7) * t342 - t14;
t402 = t115 * t271;
t401 = pkin(2) * t444;
t394 = t264 * t444;
t393 = t268 * t443;
t134 = t164 * t271 - t264 * t449;
t390 = qJD(7) * t134 + t546;
t389 = -qJD(7) * t163 - t552;
t384 = g(1) * t269 - g(2) * t276;
t383 = t115 * t465 + t11;
t382 = t115 * t467 + t12;
t90 = -t271 * t183 - t264 * t526;
t381 = -t264 * t464 + t90;
t380 = t271 * t464 - t91;
t378 = t275 * t455;
t373 = qJD(4) * t455;
t37 = -t222 * t508 - t264 * t73;
t367 = qJD(6) * t37 - t483 * t72;
t211 = -t266 * t275 + t268 * t488;
t184 = -pkin(2) * t499 - pkin(3) * t211;
t205 = t268 * t388;
t361 = t184 * t272 - t205 * t265;
t118 = t184 * t265 + t205 * t272;
t88 = -pkin(2) * t394 + t118 * t271;
t364 = -t263 * t88 + t270 * t361;
t363 = -t263 * t361 - t270 * t88;
t172 = t211 * t272 - t446;
t107 = t172 * t271 + t210 * t264;
t171 = t211 * t265 + t442;
t65 = t107 * t263 + t171 * t270;
t106 = t172 * t264 - t210 * t271;
t360 = t221 * t267 + t222 * t274;
t359 = t483 * t395;
t358 = t222 * t396;
t355 = t275 * t396;
t354 = t396 * t183;
t353 = qJD(1) * t396;
t352 = qJD(2) * t396;
t349 = t455 * t471;
t348 = t273 * t373;
t347 = t266 * t572;
t346 = -t35 * t467 + t540;
t345 = -t33 * t467 - t537;
t344 = -t458 * t483 + t540;
t343 = -t459 * t483 - t537;
t341 = -t115 * t460 - t543;
t340 = -t115 * t463 + t542;
t207 = t263 * t514 - t270 * t272;
t338 = qJD(1) * t337;
t335 = t275 * t352;
t334 = t275 * t353;
t180 = t220 * t273 + t266 * t498;
t219 = -t269 * t274 - t275 * t501;
t113 = t180 * t265 - t219 * t272;
t333 = g(1) * t113 + g(3) * t171 + t560;
t114 = t180 * t272 + t219 * t265;
t332 = g(1) * t114 + g(2) * t109 + g(3) * t172;
t330 = g(1) * t180 + g(2) * t174 + g(3) * t211;
t329 = -t138 + t358;
t6 = qJD(6) * t342 - t13 * t264 - t137 * t508 - t271 * t429;
t70 = -t114 * t264 + t179 * t271;
t328 = g(1) * t70 - g(2) * t597 - g(3) * t106 - t6;
t327 = t337 * t475;
t326 = t275 * t338;
t321 = (-pkin(2) * t145 - t221 * qJD(3) - t137) * t274;
t319 = -t14 + t333;
t317 = t265 * t460 - t381;
t315 = qJD(5) * t74 + t341;
t313 = -g(1) * t219 + g(2) * t212 + g(3) * t505 + t138;
t311 = t348 - t511;
t310 = -t274 * t573 + t506;
t309 = qJD(5) * t211 + t325;
t306 = -t336 * t455 + t373;
t305 = qJD(1) * t378 + t572;
t304 = t573 + t334;
t300 = pkin(3) * t302;
t299 = t266 * t302;
t296 = qJD(5) * t300;
t295 = t272 * t297;
t289 = -t555 - (-qJD(5) * t263 - t422) * t483 + (-qJD(6) * t35 - t343) * t271;
t288 = -t264 * t4 + (-qJD(5) * t270 + t263 * t463) * t483 + (-qJD(6) * t33 + t344) * t271;
t284 = pkin(3) * t285;
t283 = t265 * t285;
t279 = t181 * t302 + t297;
t278 = qJD(1) ^ 2;
t277 = qJD(2) ^ 2;
t217 = t266 * t485 - t500;
t208 = t264 * t507 + t494;
t194 = t211 * t276;
t193 = t210 * t276;
t192 = t211 * t269;
t191 = t210 * t269;
t190 = t339 * t268;
t189 = t209 * t268;
t178 = t218 * t272 - t265 * t502;
t177 = t218 * t265 + t272 * t502;
t168 = -t264 * t339 + t443;
t167 = t215 * t263 - t266 * t515;
t161 = t336 * t562 + t222;
t156 = pkin(3) * t337 + t221 * t273;
t151 = -t194 * t272 + t265 * t441;
t150 = -t194 * t265 - t272 * t441;
t149 = -t192 * t272 + t269 * t446;
t148 = -t192 * t265 - t269 * t442;
t147 = -t190 * t271 - t394;
t143 = t219 * t493 - t220 * t265;
t142 = t219 * t513 + t220 * t272;
t141 = -t212 * t493 - t213 * t265;
t140 = -t212 * t513 + t213 * t272;
t139 = -t210 * t495 + t211 * t264;
t133 = -t164 * t264 - t271 * t449;
t131 = -t268 * t418 - t275 * t471 - t273 * t476 + (t266 * t475 + t430) * t274;
t116 = -t325 * pkin(3) + (-t268 * t415 + (t268 * t471 - t273 * t475) * t267) * pkin(2);
t112 = t178 * t271 + t217 * t264;
t105 = t170 * t270 + t209 * t263;
t103 = pkin(3) * t181 * t265 + t447;
t102 = pkin(3) * t526 - t448;
t93 = t151 * t271 - t193 * t264;
t92 = t149 * t271 - t191 * t264;
t89 = -pkin(3) * t132 + (t434 - t436) * pkin(2);
t87 = -pkin(2) * t393 - t118 * t264;
t86 = t143 * t271 + t219 * t517;
t85 = t141 * t271 - t212 * t517;
t84 = -t179 * t495 + t180 * t264;
t83 = -t173 * t495 + t174 * t264;
t82 = t156 * t272 + t161 * t265;
t81 = t156 * t265 - t161 * t272;
t78 = t103 * t271 - t264 * t489;
t77 = -t103 * t264 - t271 * t489;
t71 = t114 * t271 + t179 * t264;
t66 = t107 * t270 - t171 * t263;
t59 = t72 * t459;
t55 = t221 * t517 + t271 * t82;
t54 = t221 * t508 - t264 * t82;
t51 = -t309 * t265 + t272 * t580;
t50 = t265 * t580 + t272 * t309;
t40 = -t120 * t496 - t122 * t263;
t39 = -t120 * t263 * t271 + t122 * t270;
t32 = -t113 * t263 + t270 * t71;
t31 = -t113 * t270 - t263 * t71;
t28 = qJD(5) * t118 + t116 * t265 - t272 * t89;
t27 = qJD(5) * t361 + t116 * t272 + t265 * t89;
t22 = -t263 * t72 - t270 * t342;
t20 = -qJD(6) * t106 + t131 * t264 + t271 * t51;
t19 = qJD(6) * t107 - t131 * t271 + t264 * t51;
t16 = -t118 * t460 - t264 * t27 + (-t271 * t392 + (-t271 * t432 + (t268 * t463 - t271 * t475) * t267) * t266) * pkin(2);
t15 = -t118 * t463 + t27 * t271 + (-qJD(6) * t393 + (-t266 * t325 - t392) * t264) * pkin(2);
t8 = -qJD(7) * t65 + t20 * t270 - t263 * t50;
t7 = t20 * t263 - t171 * t459 + (qJD(7) * t107 + t50) * t270;
t2 = -t263 * t5 + t270 * t407 + t59;
t9 = [qJDD(1), t384, t385, qJDD(1) * t261 + 0.2e1 * t268 * t412, 0.2e1 * t257 * t268 - 0.2e1 * t454 * t479, qJDD(2) * t268 + t275 * t277, qJDD(2) * t275 - t268 * t277, 0, t384 * t275, -t384 * t268, -t274 * t327 + t303 * t499 + t337 * t434 (-t275 * t457 + (qJD(3) * t337 + t146) * t268) * t274 + (t336 * t473 - (-t410 + t480) * t268 + t327 + t362 * t505) * t267 (-qJD(3) ^ 2 * t267 + qJD(2) * t337 - t486) * t268 + ((-0.2e1 * t434 + t436) * qJD(1) + t365) * t275, -t267 * t335 + t146 * t275 + (t310 + t457) * t268, -t223 * t275 - t268 * t352, -t221 * t476 + g(1) * t213 - g(2) * t220 + t138 * t275 + (-t274 * t335 + (t267 * t573 + t486) * t268) * pkin(2), -t222 * t476 - g(1) * t212 - g(2) * t219 + t137 * t275 + (t573 * t499 + (qJD(2) * t355 - t268 * t223) * t267) * pkin(2), t132 * t183 + t211 * t60, -t131 * t183 - t132 * t181 - t210 * t60 - t211 * t61, t132 * t455 - t211 * t145 - t183 * t325 - t505 * t60, -t131 * t455 + t210 * t145 + t181 * t325 + t505 * t61, -t572 * t499 + (-qJD(2) * t378 + t145 * t268) * t267, g(1) * t174 - g(2) * t180 + t221 * t131 + t138 * t210 + (-t222 * t510 + (-t274 * t181 + t455 * t510) * pkin(2)) * t475 + (-t137 * t510 + t323 * t222 + ((t347 - t61) * t274 + (t181 * qJD(3) + t311) * t267) * pkin(2)) * t268, -g(1) * t173 + g(2) * t179 + t221 * t132 + t138 * t211 + (-t267 * t489 + (-t274 * t183 + t455 * t503) * pkin(2)) * t475 + (-t267 * t491 - t324 * t222 + ((-t60 + t590) * t274 + (t183 * qJD(3) - t349 - t490) * t267) * pkin(2)) * t268, t122 * t51 + t172 * t25, -t120 * t51 - t122 * t50 - t171 * t25 - t172 * t26, t122 * t131 + t172 * t285 + t25 * t210 + t302 * t51, -t120 * t131 - t171 * t285 - t26 * t210 - t302 * t50, t131 * t302 + t210 * t285, g(1) * t109 - g(2) * t114 + t120 * t569 - t72 * t131 - t14 * t210 - t171 * t575 - t26 * t401 - t28 * t302 + t285 * t361 - t50 * t521, -g(1) * t108 + g(2) * t113 - t118 * t285 + t122 * t569 - t13 * t210 - t73 * t131 - t172 * t575 - t25 * t401 - t27 * t302 - t51 * t521, t107 * t11 + t20 * t76, -t106 * t11 - t107 * t12 - t19 * t76 - t20 * t74, t107 * t24 + t11 * t171 + t115 * t20 + t50 * t76, -t106 * t24 - t115 * t19 - t12 * t171 - t50 * t74, t115 * t50 + t171 * t24, g(1) * t68 - g(2) * t71 + t106 * t14 + t115 * t16 - t12 * t361 + t171 * t6 + t19 * t72 + t24 * t87 + t28 * t74 + t37 * t50, -g(1) * t597 - g(2) * t70 + t14 * t107 - t361 * t11 - t15 * t115 - t5 * t171 + t72 * t20 - t88 * t24 + t28 * t76 + t342 * t50, t3 * t66 + t35 * t8, -t3 * t65 - t33 * t8 - t35 * t7 - t4 * t66, -t10 * t66 - t106 * t3 - t19 * t35 + t483 * t8, t10 * t65 + t106 * t4 + t19 * t33 - t483 * t7, t10 * t106 - t19 * t483, t16 * t33 + t87 * t4 + t6 * t65 + t37 * t7 + (qJD(7) * t363 - t15 * t263 - t270 * t28) * t483 - t364 * t10 - t2 * t106 + t366 * t19 + g(1) * t604 - g(2) * t32, t16 * t35 + t87 * t3 + t6 * t66 + t37 * t8 - (qJD(7) * t364 + t15 * t270 - t263 * t28) * t483 - t363 * t10 + t1 * t106 + t22 * t19 - g(1) * (t108 * t270 + t263 * t68) - g(2) * t31; 0, 0, 0, -t268 * t278 * t275, t479 * t278, t451, t257, qJDD(2), t312, g(3) * t268 + t275 * t385, -t365 * t267 + t274 * t326 + (t267 * t336 + t274 * t337) * qJD(3) (t414 + (t336 + t259) * qJD(3) - t480) * t274 + (-t146 + t450 - t326 + (-t258 + 0.2e1 * t438) * qJD(3)) * t267, -t268 * t338 - t274 * t334 + t310, t267 * t304 - t336 * t478 + t486, t268 * t353, -pkin(2) * t506 + t221 * t478 + (pkin(2) * t304 + t312) * t274, -pkin(2) * t486 + t222 * t478 + ((-qJD(1) * t355 - t573) * pkin(2) - t312) * t267, t605 * t183 - t60 * t503, t181 * t203 + t183 * t202 + (t181 * t273 + t183 * t266) * t472 + (t538 + t273 * t61 + (-t181 * t266 + t525) * qJD(4)) * t267, -t203 * t455 + (-t60 - t590) * t274 + (t266 * t373 + t354 + t490) * t267, t202 * t455 + (t347 + t61) * t274 + (t311 - t583) * t267, t145 * t274 + t267 * t305, g(1) * t194 + g(2) * t192 - g(3) * t218 - t221 * t202 - t360 * t469 + (t267 * t61 + (t348 + t583) * t274) * pkin(2) + (t321 + (-pkin(2) * t305 + t329) * t267) * t266, -g(1) * t193 - g(2) * t191 + g(3) * t217 - t221 * t203 + t360 * t471 + (t267 * t60 + (-t349 + t354) * t274) * pkin(2) + (t321 + ((-t455 * t477 - t572) * pkin(2) + t329) * t267) * t273, t122 * t482 - t25 * t339, -t120 * t482 + t122 * t481 + t209 * t25 + t26 * t339, -t122 * t571 - t25 * t510 - t285 * t339 + t302 * t482, t120 * t571 + t209 * t285 + t26 * t510 + t302 * t481, -t202 * t302 - t267 * t578 - t299 * t472, -g(1) * t151 - g(2) * t149 - g(3) * t178 + t568 * t120 + t14 * t510 - t163 * t285 + t575 * t209 - t26 * t449 - t546 * t302 + t481 * t521 + t571 * t72, g(1) * t150 + g(2) * t148 + g(3) * t177 + t568 * t122 + t13 * t510 - t164 * t285 - t25 * t449 + t595 * t302 + t575 * t339 - t482 * t521 + t571 * t73, t11 * t170 + t548 * t76, -t11 * t168 - t12 * t170 - t547 * t76 - t548 * t74, -t11 * t209 + t115 * t548 + t170 * t24 - t481 * t76, -t115 * t547 + t12 * t209 - t168 * t24 + t481 * t74, -t115 * t481 - t209 * t24, -g(1) * t93 - g(2) * t92 - g(3) * t112 + t115 * t551 + t12 * t163 + t133 * t24 + t14 * t168 - t209 * t6 - t37 * t481 + t546 * t74 + t547 * t72, -t134 * t24 + t5 * t209 + t163 * t11 + t14 * t170 - g(1) * (-t151 * t264 - t193 * t271) - g(2) * (-t149 * t264 - t191 * t271) - g(3) * (-t178 * t264 + t217 * t271) + t546 * t76 + t548 * t72 - t481 * t342 + t552 * t115, t105 * t3 + t35 * t554, -t104 * t3 - t105 * t4 - t33 * t554 - t35 * t553, -t10 * t105 - t168 * t3 - t35 * t547 + t483 * t554, t10 * t104 + t168 * t4 + t33 * t547 - t483 * t553, t10 * t168 - t483 * t547, t133 * t4 + t6 * t104 - (-t134 * t263 - t163 * t270) * t10 - t2 * t168 - g(1) * (-t150 * t263 + t270 * t93) - g(2) * (-t148 * t263 + t270 * t92) - g(3) * (t112 * t270 - t177 * t263) - (t263 * t389 + t270 * t390) * t483 + t553 * t37 + t551 * t33 + t547 * t366, t133 * t3 + t6 * t105 + (t134 * t270 - t163 * t263) * t10 + t1 * t168 - g(1) * (-t150 * t270 - t263 * t93) - g(2) * (-t148 * t270 - t263 * t92) - g(3) * (-t112 * t263 - t177 * t270) - (-t263 * t390 + t270 * t389) * t483 + t554 * t37 + t551 * t35 + t547 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t337 * t336, -t336 ^ 2 + t337 ^ 2, t365 + t414, -t258 * qJD(3) + (-t258 - t337) * t477 + t320, -t223, -t358 + t313, g(1) * t220 + g(2) * t213 + g(3) * t499 + t221 * t396 + t137, -t455 * t525 - t538 (t181 * t455 - t60) * t273 + (t61 + t602) * t266, -t183 * t337 - t273 * t306 + t511, t181 * t337 + t266 * t306 + t490, -t455 * t337, -t222 * t181 - t266 * t567 + t313 * t273, -t222 * t183 - t313 * t266 - t273 * t567, t589 * t122 - t25 * t507, t120 * t153 + t122 * t152 + (t120 * t272 + t122 * t265) * t469 + (t541 + t26 * t272 + (-t120 * t265 + t528) * qJD(5)) * t266, -t122 * t574 - t153 * t302 + t25 * t273 - t570, t120 * t574 + t152 * t302 - t26 * t273 + t265 * t578 + t266 * t295, -t266 * t298 + t273 * t285 + t299 * t336, pkin(3) * t570 - g(1) * t143 - g(2) * t141 + g(3) * t190 - t120 * t522 - t14 * t273 + t152 * t521 + t265 * t577 + t272 * t427 + t302 * t81 + t574 * t72, g(1) * t142 + g(2) * t140 - g(3) * t189 - t122 * t522 - t13 * t273 + t153 * t521 - t265 * t427 + t272 * t577 - t284 * t516 - t296 * t507 - t300 * t419 + t302 * t82 + t574 * t73, t11 * t215 + t531 * t76, t11 * t208 - t12 * t215 + t530 * t76 - t531 * t74, -t11 * t516 + t115 * t531 + t215 * t24 - t316 * t76, t115 * t530 + t12 * t516 + t208 * t24 + t316 * t74, -t115 * t316 - t24 * t516, -t6 * t516 - g(1) * t86 - g(2) * t85 - g(3) * t147 - t115 * t54 - t14 * t208 - t74 * t81 - t530 * t72 - t316 * t37 + ((-t115 * t518 - t272 * t74) * t469 + (t265 * t315 - t272 * t382) * t266) * pkin(3), t5 * t516 + t14 * t215 + t55 * t115 - t81 * t76 - g(1) * (-t143 * t264 + t219 * t508) - g(2) * (-t141 * t264 - t212 * t508) - g(3) * (t190 * t264 - t393) + t531 * t72 - t316 * t342 + ((-t115 * t514 - t272 * t76) * t469 + (-t383 * t272 + (-t340 + t529) * t265) * t266) * pkin(3), t169 * t3 + t35 * t550, -t167 * t3 - t169 * t4 - t33 * t550 - t35 * t549, -t10 * t169 + t208 * t3 + t35 * t530 + t483 * t550, t10 * t167 - t208 * t4 - t33 * t530 - t483 * t549, -t10 * t208 + t483 * t530, t6 * t167 + t2 * t208 - t54 * t33 - (-t263 * t55 - t270 * t81) * t483 - g(1) * (-t142 * t263 + t270 * t86) - g(2) * (-t140 * t263 + t270 * t85) - g(3) * (t147 * t270 + t189 * t263) + t549 * t37 - t530 * t366 + ((-t207 * t483 - t33 * t518) * t469 + ((-t263 * t359 + t345) * t272 + t288 * t265) * t266) * pkin(3), t6 * t169 - t1 * t208 - t54 * t35 + (-t263 * t81 + t270 * t55) * t483 - g(1) * (-t142 * t270 - t263 * t86) - g(2) * (-t140 * t270 - t263 * t85) - g(3) * (-t147 * t263 + t189 * t270) + t550 * t37 - t530 * t22 + ((-t214 * t483 - t35 * t518) * t469 + ((-t356 * t483 + t346) * t272 + t289 * t265) * t266) * pkin(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183 * t181, -t181 ^ 2 + t183 ^ 2, -t181 * t336 + t403, -t61 + t602, -t145, -t221 * t183 + t336 * t489 - t587, t221 * t181 - t336 * t521 + t330 + t491, t302 * t528 + t541 (t25 - t584) * t272 + (-t122 * t302 - t26) * t265, -t122 * t183 + t272 * t279 + t283, t120 * t183 - t265 * t279 + t281, -t302 * t183, -t102 * t302 + t120 * t489 + t137 * t507 - t181 * t448 + t72 * t183 + t576 * t222 + (-t283 - t295) * pkin(3) + t331 * t272, t103 * t302 + t122 * t489 - t181 * t447 + t73 * t183 - t272 * t284 - t322 * t222 + (t296 + t587) * t265, t11 * t514 + (t380 - t423) * t76, t74 * t91 + t76 * t90 + (-t264 * t76 - t271 * t74) * t464 + (-t545 - t12 * t271 + (t264 * t74 - t271 * t76) * qJD(6)) * t265, -t11 * t272 + t380 * t115 + (t302 * t76 + t340) * t265, t12 * t272 + t381 * t115 + (-t302 * t74 + t341) * t265, t115 * t265 * t302 - t24 * t272, -g(1) * t84 - g(2) * t83 - g(3) * t139 + t102 * t74 - t115 * t77 - t72 * t90 + (pkin(3) * t315 + t467 * t72 - t6) * t272 + (pkin(3) * t382 + t14 * t264 + t302 * t37 + t460 * t72) * t265, t102 * t76 + t78 * t115 - t72 * t91 - t330 * t271 + (t72 * t465 + t5 + (t529 - t542) * pkin(3) + (pkin(3) * qJD(6) * t115 - t331) * t264) * t272 + (pkin(3) * t383 + t14 * t271 + t302 * t342 - t463 * t72) * t265, t214 * t3 + t35 * t533, -t207 * t3 - t214 * t4 - t33 * t533 - t35 * t532, -t10 * t214 - t3 * t518 - t317 * t35 + t483 * t533, t10 * t207 + t317 * t33 + t4 * t518 - t483 * t532, t10 * t518 - t317 * t483, t6 * t207 - t2 * t518 - t77 * t33 - (t102 * t270 - t263 * t78) * t483 - g(1) * (t179 * t519 + t270 * t84) - g(2) * (t173 * t519 + t270 * t83) - g(3) * (t139 * t270 + t210 * t519) + t532 * t37 + t317 * t366 + ((t395 * t539 - t345) * t265 + t288 * t272) * pkin(3), t6 * t214 + t1 * t518 - t77 * t35 + (t102 * t263 + t270 * t78) * t483 - g(1) * (t179 * t515 - t263 * t84) - g(2) * (t173 * t515 - t263 * t83) - g(3) * (-t139 * t263 + t210 * t515) + t533 * t37 + t317 * t22 + ((t270 * t359 - t346) * t265 + t289 * t272) * pkin(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122 * t120, -t120 ^ 2 + t122 ^ 2, t25 + t584, t122 * t181 - t404, t285, t122 * t521 + t181 * t73 + t333 - t408, -t120 * t521 - t181 * t72 - t290 + t332, t402 * t76 + t545 (t11 - t544) * t271 + (-t12 - t534) * t264, t115 * t402 - t122 * t76 + t543, -t115 ^ 2 * t264 + t122 * t74 + t542, -t115 * t122, -t122 * t37 + t271 * t319 - t73 * t74, -t122 * t342 - t264 * t319 - t73 * t76, t270 * t555 + (-t264 * t459 + t270 * t460 - t40) * t35, t33 * t40 + t35 * t39 + (-t263 * t35 - t270 * t33) * t460 + (-t556 - t270 * t4 + (t263 * t33 - t536) * qJD(7)) * t264, -t40 * t483 + (t461 * t483 + t3) * t271 + (-t115 * t35 + t343) * t264, t39 * t483 + (-qJD(6) * t539 - t4) * t271 + (t115 * t33 + t344) * t264, -t115 * t264 * t483 - t10 * t271, t73 * t535 - t37 * t39 + t332 * t263 + (t263 * t367 + t270 * t333 + t2) * t271 + (t115 * t366 + t6 * t263 - t72 * t33 + t37 * t458) * t264, -t73 * t539 - t37 * t40 + t332 * t270 + (-t263 * t333 + t270 * t367 - t1) * t271 + (t115 * t22 + t6 * t270 - t72 * t35 - t37 * t459) * t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76 * t74, -t74 ^ 2 + t76 ^ 2, t11 + t544, -t12 + t534, t24, -t115 * t342 - t72 * t76 - t328, g(1) * t71 + g(3) * t107 + t115 * t37 + t72 * t74 + t585, -t483 * t536 - t556 (-t3 + t594) * t270 + (t4 + t593) * t263, t35 * t76 - t483 * t535 + t540, -t33 * t76 + t483 * t539 + t537, t483 * t76, -t270 * t328 - t33 * t342 - t366 * t76, -t22 * t76 + t263 * t328 - t342 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35 * t33, -t33 ^ 2 + t35 ^ 2, t3 + t594, -t4 + t593, -t10, -g(1) * t31 + g(3) * t65 + t22 * t483 - t37 * t35 + t59 + t585 * t263 + (t407 + t560) * t270, g(1) * t32 + g(2) * t604 + g(3) * t66 + t37 * t33 - t366 * t483 - t1;];
tau_reg  = t9;
